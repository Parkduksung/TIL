plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.example.til"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

// live data
dependencies {
    def lifecycleVersion = "2.2.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}"
    // alternatively - just ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}"
    // use -ktx for Kotlin
    // alternatively - just LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata:${lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleVersion}"

    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "androidx.lifecycle:lifecycle-runtime:${lifecycleVersion}"

//    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0' // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:${lifecycleVersion}"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:${lifecycleVersion}"

    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:${lifecycleVersion}"
    testImplementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleVersion}"
}